[Tue Oct  8 16:53:24 2024] >> 
        ######################### OPTIMIZER
        # do not optimize these numbers
        if OPTIMIZER_ENABLE:
            if (A == -1*2**(bit_len-1)) or (B == -1*2**(bit_len-1)):
                pass
            else:
                if (mp.gfa[1][7].tgate[0].p1.gate == L) or (mp.gfa[0][5].tgate[0].p1.gate == L):
                    neg_A = -A
                    neg_B = -B
                    neg_mp = MPn_v3(
                        signed_b(neg_A, bit_len),
                        signed_b(neg_B, bit_len),
                        bit_len
                    )
                    neg_mp.output

                    if (neg_mp.gfa[1][7].tgate[0].p1.gate == H) and (neg_mp.gfa[0][5].tgate[0].p0.gate == H):
                        mp = neg_mp
                        optimized_flag = True
                        # log.println(f"{A} * {B}, [optimizer: {optimized_flag}]")
        ######################### /OPTIMIZER
    
[[0.7509765625, 0.2490234375, 0.625, 0.375, 0.375, 0.625], [0.751953125, 0.248046875, 0.625, 0.375, 0.375, 0.625], [0.7548828125, 0.2451171875, 0.6279296875, 0.3720703125, 0.3720703125, 0.6279296875], [0.759765625, 0.240234375, 0.626953125, 0.373046875, 0.373046875, 0.626953125], [0.7705078125, 0.2294921875, 0.6396484375, 0.3603515625, 0.3603515625, 0.6396484375], [0.7294921875, 0.2705078125, 0.6044921875, 0.3955078125, 0.3955078125, 0.6044921875], [0.271484375, 0.728515625, 0.375, 0.625, 0.625, 0.375], [0.0, 1.0, 0.728515625, 0.271484375, 0.271484375, 0.728515625]], 
[[0.6259765625, 0.3740234375, 0.5625, 0.4375, 0.4375, 0.5625], [0.626953125, 0.373046875, 0.56298828125, 0.43701171875, 0.43701171875, 0.56298828125], [0.6298828125, 0.3701171875, 0.564453125, 0.435546875, 0.435546875, 0.564453125], [0.634765625, 0.365234375, 0.56689453125, 0.43310546875, 0.43310546875, 0.56689453125], [0.6044921875, 0.3955078125, 0.552734375, 0.447265625, 0.447265625, 0.552734375], [0.375, 0.625, 0.42724609375, 0.57275390625, 0.57275390625, 0.42724609375], [0.6865234375, 0.3134765625, 0.59423828125, 0.40576171875, 0.40576171875, 0.59423828125], [0.16796875, 0.83203125, 0.7392578125, 0.2607421875, 0.2607421875, 0.7392578125]], 
[[0.5634765625, 0.4365234375, 0.53125, 0.46875, 0.46875, 0.53125], [0.5654296875, 0.4345703125, 0.53173828125, 0.46826171875, 0.46826171875, 0.53173828125], [0.56884765625, 0.43115234375, 0.53466796875, 0.46533203125, 0.46533203125, 0.53466796875], [0.55078125, 0.44921875, 0.5244140625, 0.4755859375, 0.4755859375, 0.5244140625], [0.43896484375, 0.56103515625, 0.46435546875, 0.53564453125, 0.53564453125, 0.46435546875], [0.6025390625, 0.3974609375, 0.548828125, 0.451171875, 0.451171875, 0.548828125], [0.62353515625, 0.37646484375, 0.57666015625, 0.42333984375, 0.42333984375, 0.57666015625], [0.2978515625, 0.7021484375, 0.7392578125, 0.2607421875, 0.2607421875, 0.7392578125]], 
[[0.533203125, 0.466796875, 0.515625, 0.484375, 0.484375, 0.515625], [0.53466796875, 0.46533203125, 0.516357421875, 0.483642578125, 0.483642578125, 0.516357421875], [0.52392578125, 0.47607421875, 0.5126953125, 0.4873046875, 0.4873046875, 0.5126953125], [0.468505859375, 0.531494140625, 0.480712890625, 0.519287109375, 0.519287109375, 0.480712890625], [0.55078125, 0.44921875, 0.525390625, 0.474609375, 0.474609375, 0.525390625], [0.5712890625, 0.4287109375, 0.543701171875, 0.456298828125, 0.456298828125, 0.543701171875], [0.57177734375, 0.42822265625, 0.570556640625, 0.429443359375, 0.429443359375, 0.570556640625], [0.387939453125, 0.612060546875, 0.7392578125, 0.2607421875, 0.2607421875, 0.7392578125]], 
[[0.51708984375, 0.48291015625, 0.5078125, 0.4921875, 0.4921875, 0.5078125], [0.51171875, 0.48828125, 0.5062255859375, 0.4937744140625, 0.4937744140625, 0.5062255859375], [0.4844970703125, 0.5155029296875, 0.490234375, 0.509765625, 0.509765625, 0.490234375], [0.5252685546875, 0.4747314453125, 0.5128173828125, 0.4871826171875, 0.4871826171875, 0.5128173828125], [0.53564453125, 0.46435546875, 0.52197265625, 0.47802734375, 0.47802734375, 0.52197265625], [0.54345703125, 0.45654296875, 0.5400390625, 0.4599609375, 0.4599609375, 0.5400390625], [0.5360107421875, 0.4639892578125, 0.5687255859375, 0.4312744140625, 0.4312744140625, 0.5687255859375], [0.4444580078125, 0.5555419921875, 0.7392578125, 0.2607421875, 0.2607421875, 0.7392578125]], 
[[0.50537109375, 0.49462890625, 0.50390625, 0.49609375, 0.49609375, 0.50390625], [0.491943359375, 0.508056640625, 0.494873046875, 0.505126953125, 0.505126953125, 0.494873046875], [0.513671875, 0.486328125, 0.5074462890625, 0.4925537109375, 0.4925537109375, 0.5074462890625], [0.51953125, 0.48046875, 0.5123291015625, 0.4876708984375, 0.4876708984375, 0.5123291015625], [0.5205078125, 0.4794921875, 0.5205078125, 0.4794921875, 0.4794921875, 0.5205078125], [0.52490234375, 0.47509765625, 0.539794921875, 0.460205078125, 0.460205078125, 0.539794921875], [0.5126953125, 0.4873046875, 0.5677490234375, 0.4322509765625, 0.4322509765625, 0.5677490234375], [0.47833251953125, 0.52166748046875, 0.7392578125, 0.2607421875, 0.2607421875, 0.7392578125]], 
[[0.49560546875, 0.50439453125, 0.501953125, 0.498046875, 0.498046875, 0.501953125], [0.50537109375, 0.49462890625, 0.4970703125, 0.5029296875, 0.5029296875, 0.4970703125], [0.510009765625, 0.489990234375, 0.492828369140625, 0.507171630859375, 0.507171630859375, 0.492828369140625], [0.51104736328125, 0.48895263671875, 0.4892578125, 0.5107421875, 0.5107421875, 0.4892578125], [0.511474609375, 0.488525390625, 0.479461669921875, 0.520538330078125, 0.520538330078125, 0.479461669921875], [0.513275146484375, 0.486724853515625, 0.460357666015625, 0.539642333984375, 0.539642333984375, 0.460357666015625], [0.49847412109375, 0.50152587890625, 0.432373046875, 0.567626953125, 0.567626953125, 0.432373046875], [0.4979248046875, 0.5020751953125, 0.2607421875, 0.7392578125, 0.7392578125, 0.2607421875]], 
